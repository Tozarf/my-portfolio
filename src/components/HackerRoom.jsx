/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: Ankledot (https://sketchfab.com/Ankledot)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/desk-asset-ca972bf129344a73a3fe59a0eef78164
Title: Desk Asset
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";

// type GLTFResult = GLTF & {
//   nodes: {
//     Can_Momster_M_Can_Momster_0: THREE.Mesh
//     Monitor_Wide_M_Monitor_Wide_0: THREE.Mesh
//     Monitor_Wide_M_Monitor_Wide_Screen_0: THREE.Mesh
//     Keyboard_M_Keyboard_0: THREE.Mesh
//     Desk_M_Desk_Bottom_0: THREE.Mesh
//     Desk_M_Desk_Top_0: THREE.Mesh
//     ['1_M_HUION_KAMVAS_GT_221_PRO_0']: THREE.Mesh
//   }
//   materials: {
//     M_Can_Momster: THREE.MeshStandardMaterial
//     M_Monitor_Wide: THREE.MeshStandardMaterial
//     M_Monitor_Wide_Screen: THREE.MeshStandardMaterial
//     M_Keyboard: THREE.MeshStandardMaterial
//     M_Desk_Bottom: THREE.MeshStandardMaterial
//     M_Desk_Top: THREE.MeshStandardMaterial
//     M_HUION_KAMVAS_GT_221_PRO: THREE.MeshStandardMaterial
//   }
// }

const HakerRoom = (props) => {
  const { nodes, materials } = useGLTF("/models/hacker-room.glb");
  return (
    <group {...props} dispose={null}>
      <group
        position={[75.127, 55.105, -73.996]}
        rotation={[-Math.PI / 2, 0, -0.737]}
        scale={100}
      >
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Monitor_Wide_M_Monitor_Wide_0.geometry}
          material={materials.M_Monitor_Wide}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Monitor_Wide_M_Monitor_Wide_Screen_0.geometry}
          material={materials.M_Monitor_Wide_Screen}
        />
      </group>
      <group
        position={[10.181, 6.957, -6.35]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={100}
      >
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Desk_M_Desk_Bottom_0.geometry}
          material={materials.M_Desk_Bottom}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Desk_M_Desk_Top_0.geometry}
          material={materials.M_Desk_Top}
        />
      </group>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Can_Momster_M_Can_Momster_0.geometry}
        material={materials.M_Can_Momster}
        position={[78.612, 42.852, -45.484]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={100}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Keyboard_M_Keyboard_0.geometry}
        material={materials.M_Keyboard}
        position={[56.279, 37.56, -39.782]}
        rotation={[-Math.PI / 2, 0, -1.132]}
        scale={100}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes["1_M_HUION_KAMVAS_GT_221_PRO_0"].geometry}
        material={materials.M_HUION_KAMVAS_GT_221_PRO}
        position={[12.173, 48.648, -73.081]}
        rotation={[-Math.PI / 2, 0, -0.217]}
        scale={100}
      />
    </group>
  );
};
useGLTF.preload("/models/hacker-room.glb");

export default HakerRoom;
